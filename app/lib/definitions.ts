// This file contains type definitions for your data.
// It describes the shape of the data, and what data type each property should accept.
// For simplicity of teaching, we're manually defining these types.
// However, these types are generated automatically if you're using an ORM such as Prisma.
interface User {
  id?: number;
  name: string;
  email: string;
  password: string;
}
interface Subject {
    id?: number; // Optional because it's auto-generated by the database
    subject_name: string;
  }
interface Topic {
    id?: number; // Optional because it's auto-generated by the database
    topic_name: string;
  }
  
  interface Profession {
    id?: number;
    profession_name: string;
  }
  
  interface ReferredBy {
    id?: number;
    name: string;
  }
  
  interface UserData {
    user_id?: number;
    first_name: string;
    last_name: string;
    email_id: string;
    phone_number: string;
    country_code: string;
    gender: string;
    age: number;
    password: string;
    profession_id: number;
    referred_by_id: number;
    profile_pic: Buffer; // Assuming BYTEA is used for binary data
    address: string;
    created_at?: Date;
  }
  
  interface SubTopic {
    id?: number;
    topic_name: string;
    sub_topic_name: string;
  }
  
  interface Approver {
    id?: number;
    approver_name: string;
    designation: string;
  }
  
  interface Question {
    question_id?: number;
    subject_name:string;
    topic_name: number;
    sub_topic_name: string;
    question: string;
    options: string[];
    opt_values: string[];
    correct_options: boolean[];
    selective_cnt: string;
    difficulty: string;
    explanation: string;
    reference: string;
    source: string;
    approver_id: number;
    created_at?: Date;
    visibility_flag: boolean;
  }
  
  interface Bookmark {
    bookmark_id?: number;
    user_id: number;
  }
  
  interface BookmarkQuestions {
    id?: number;
    user_id: number;
    question_id: number;
    bookmark_id: number;
    created_at?: Date;
    updated_at?: Date;
  }
  
  interface UserHistory {
    id?: number;
    user_id: number;
    mcqs_completed: string;
    last_login?: Date;
  }
  
  interface MockExam {
    exam_id?: number;
    exam_name: string;
  }
  
  interface ExamYearConducted {
    conducted_id?: number;
    year: number;
    month: number;
  }
  
  interface MockExamQuestions {
    id?: number;
    exam_id: number;
    conducted_id: number;
    question_list: string;
  }